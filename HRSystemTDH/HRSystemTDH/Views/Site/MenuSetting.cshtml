@using HRSystemTDH.Models
@model List<MenuEntry>
@{
    var model = Model?? new List<MenuEntry>();

    var newmodel = new MenuEntry(); 
    Layout = null;
}

<div class="col-sm-4">
    <h4>Create Menu</h4> 
    @using (Html.BeginForm("CreateMenu", "Site", FormMethod.Post, new { id = "frm-Menu" }))
    {
    <div>
        <label>Name</label>
        <input type="text" name="Name" value="" />
    </div>
    <div>
        <label>Note</label>
        <input type="text" name="Note" value="" />
    </div>
    <div>
        <label>Index</label>
        <input type="text" name="Index" value="" />
    </div>
    <div>
        <label>Class</label>
        <input type="text" name="Class" value="" />
    </div>
    <div>
        <label>Slug</label>
        <input type="text" name="Slug" value="" />
    </div>
    <div>
        <label>ParentSlug</label>
        <input type="text" name="ParentSlug" value="" />
    </div>
    <div>
        <label>Action</label>
        <input type="text" name="Action" value="" />
        @*@Html.TextBoxFor(mn => newmodel.Action)*@

    </div>
    <div>
        <label>Image</label>
        <input type="text" name="Image" value="" />
        @*@Html.TextBoxFor(mn => newmodel.Image)*@


    </div>
    <div>
        <label>Active</label>
        <input type="text" name="Active" value="" />
        @*@Html.TextBoxFor(mn => newmodel.Active)*@

    </div>
    <div class="">
        <button type="submit">Submit</button>
        <button type="button">Cancel</button>
    </div>
    }
</div>
<div class="col-sm-8">
    <h4>List Menu</h4> 
    <a href="" class="change-position">Change Position</a>
    <a href="#">Save Update</a>
    @if (model != null && model.Count > 0)
    {
        //using (Html.BeginForm("ChangeIndexMenu", "Site", FormMethod.Post, new { id = "frm-Menu" }))
        //{

            <ul id="sortable" class="nested_with_switch vertical">
                <li>
                    <span class="col-sm-1">Index</span>
                    <span class="col-sm-1">ID</span>
                    <span class="col-sm-1">Name</span>
                    <span class="col-sm-1">Note</span>
                    <span class="col-sm-1">Class</span>
                    <span class="col-sm-1">Slug</span>
                    <span class="col-sm-1">ParentSlug</span>
                    <span class="col-sm-1">Action</span>
                    <span class="col-sm-1">Image</span>
                    <span class="col-sm-1">Active</span>
                    <span class="col-sm-1">Remove</span>
                    <span class="col-sm-1">Edit</span>
                </li>
                @foreach (var menu in model)
                {
                    <li class="ui-state-default">
                        <span class="col-sm-1 mn-index">@menu.Index</span>
                        <span class="col-sm-1 mn-id">@menu.ID</span>
                        <span class="col-sm-2">@menu.Name</span>
                        <span class="col-sm-1">@menu.Note</span>
                        <span class="col-sm-1">@menu.Class</span>
                        <span class="col-sm-1">@menu.Slug</span>
                        <span class="col-sm-1">@menu.ParentSlugID</span>
                        <span class="col-sm-1">@menu.Action</span>
                        <span class="col-sm-1">@menu.Image</span>
                        <span class="col-sm-1">@menu.Active</span>
                        <span class="col-sm-1" align="center"><a href="@Url.Action("RemoveMenu",new { id=menu.ID})"><i class="glyphicon-remove glyphicon"></i></a> </span>
                        <span class="col-sm-1" align="center"><a href="@Url.Action("EditMenu","Site", new { id=menu.ID})"><i class="glyphicon-edit glyphicon"></i></a> </span>
                       
                    </li>
                }

            </ul>
            <button class="btn-saveindex">Save</button>
        //}
    }
</div>
<hr />
<br>
<div>
    1. remove: check before remove <br />
        + remove forever<br />
        + set disable, not remove<br />
        + Cancel <br />
        + Check validate
    2. Edit: change static page to popup for use ajax
</div>


<script>
  $( function() {
      $("#sortable").sortable({
          start: function (event, ui) {
              var start_pos = ui.item.index();
              ui.item.data('start_pos', start_pos);
              //console.log(start_pos);
          },
          change: function (event, ui) {
              var start_pos = ui.item.data('start_pos');
              var index = ui.placeholder.index();
              if (start_pos < index) {
                  $('#sortable li:nth-child(' + index + ')').addClass('highlights');
              } else {
                  $('#sortable li:eq(' + (index + 1) + ')').addClass('highlights');
              }
              
          },
          update: function (event, ui) {
              $('#sortable li').removeClass('highlights');
              //console.log(ui.item.index());

              $("#sortable li").each(function (index) {
                  $(this).find("span.mn-index").text(index);
              });
          },
          group: 'nested',
          afterMove: function (placeholder, container) {
              if (oldContainer != container) {
                  if (oldContainer)
                      oldContainer.el.removeClass("active");
                  container.el.addClass("active");

                  oldContainer = container;
              }
          },
          onDrop: function ($item, container, _super) {
              container.el.removeClass("active");
              _super($item, container);
          }
      });
      //var oldContainer;
      $("ol.nested_with_switch").sortable({
         
      });
    //$("#sortable").disableSelection();
  
    $(".btn-saveindex").click(function () {
        var index = $(".mn-id").map(function (e) {
            return $(this).text();
        }).get().join(", ");
        //console.log(index);
        $.post("@Url.Action("ChangeIndexMenu")", { ids: index }, function (data) { });
    });
  } );
</script>